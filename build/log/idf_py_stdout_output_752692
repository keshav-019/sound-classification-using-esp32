[1/10] Performing build step for 'bootloader'
[1/1] cd /home/sumanshu/projects/i2s_recorder/build/bootloader/esp-idf/esptool_py && /home/sumanshu/.espressif/python_env/idf5.3_py3.12_env/bin/python /home/sumanshu/esp/v5.3.2/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /home/sumanshu/projects/i2s_recorder/build/bootloader/bootloader.bin
Bootloader binary size 0x5490 bytes. 0x2b70 bytes (34%) free.
[2/10] No install step for 'bootloader'
[3/10] Completed 'bootloader'
[4/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/i2s_recorder_main.c.obj
[5/10] Linking C static library esp-idf/main/libmain.a
[6/10] Generating ld/sections.ld
[7/10] Linking CXX executable esp32_i2s_driver_example.elf
[8/10] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated /home/sumanshu/projects/i2s_recorder/build/esp32_i2s_driver_example.bin
[9/10] cd /home/sumanshu/projects/i2s_recorder/build/esp-idf/esptool_py && /home/sumanshu/.espressif/python_env/idf5.3_py3.12_env/bin/python /home/sumanshu/esp/v5.3.2/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/sumanshu/projects/i2s_recorder/build/partition_table/partition-table.bin /home/sumanshu/projects/i2s_recorder/build/esp32_i2s_driver_example.bin
esp32_i2s_driver_example.bin binary size 0x4eb00 bytes. Smallest app partition is 0x100000 bytes. 0xb1500 bytes (69%) free.
[9/10] cd /home/sumanshu/esp/v5.3.2/esp-idf/components/esptool_py && /usr/bin/cmake -D IDF_PATH=/home/sumanshu/esp/v5.3.2/esp-idf -D "SERIAL_TOOL=/home/sumanshu/.espressif/python_env/idf5.3_py3.12_env/bin/python;;/home/sumanshu/esp/v5.3.2/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32s3" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/home/sumanshu/projects/i2s_recorder/build -P /home/sumanshu/esp/v5.3.2/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32s3 -p /dev/ttyACM1 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 2MB 0x0 bootloader/bootloader.bin 0x10000 esp32_i2s_driver_example.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.8.1
Serial port /dev/ttyACM1
Connecting....
Chip is ESP32-S3 (QFN56) (revision v0.1)
Features: WiFi, BLE, Embedded PSRAM 2MB (AP_3v3)
Crystal is 40MHz
MAC: 7c:df:a1:ee:d6:94
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00000000 to 0x00005fff...
Flash will be erased from 0x00010000 to 0x0005efff...
Flash will be erased from 0x00008000 to 0x00008fff...
SHA digest in image updated
Compressed 21648 bytes to 13312...
Writing at 0x00000000... (100 %)
Wrote 21648 bytes (13312 compressed) at 0x00000000 in 0.7 seconds (effective 250.1 kbit/s)...
Hash of data verified.
Compressed 322304 bytes to 173309...
Writing at 0x00010000... (9 %)
Writing at 0x0001c947... (18 %)
Writing at 0x000247b9... (27 %)
Writing at 0x0002adc2... (36 %)
Writing at 0x00030910... (45 %)
Writing at 0x0003705e... (54 %)
Writing at 0x0003cc06... (63 %)
Writing at 0x00046b0e... (72 %)
Writing at 0x0004e804... (81 %)
Writing at 0x00054524... (90 %)
Writing at 0x0005b0cc... (100 %)
Wrote 322304 bytes (173309 compressed) at 0x00010000 in 4.9 seconds (effective 523.0 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 375.4 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
